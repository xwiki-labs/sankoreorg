<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>Search</web>
  <name>GroupsJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Search.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1341938422000</creationDate>
  <date>1341938422000</date>
  <contentUpdateDate>1341938422000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/1.0</syntaxId>
  <hidden>false</hidden>
  <content>{pre}
## start=0&amp;limit=25&amp;sort=title&amp;dir=ASC
## terms=&amp;subject=&amp;filetype=&amp;level=&amp;language=&amp;ict=&amp;special=
## return  root: results, totalProperty: totalCount
##   pagename, title, ict, contributor, contributorName, review
#set($lucene = $xwiki.getPlugin("lucene"))
#if(!$lucene)
  {'resultCount':'0', 'rows':[]}
#else
  ##
  ## Set start and limit for result list
  ##
  #set($Integer = 0)
  #set($maxResults = $Integer.parseInt($msg.get('search.results.max')))
  #set($start = 0)
  #if("$!request.start" != "")
    #set($start = $Integer.parseInt($request.start))
  #end
  #set($start = 1 + $start)
  #set($start = "$start")
  #set($limit = "25")
  #if("$!request.limit" != "")
    #set($limit = $request.limit)
  #end
  ##
  ## Set sort field
  ##
  #set($sortField1 = 'XWiki.GroupClass.title.untokenized')
  #set($sortField2 = 'date')
  #if($!request.sort != "")
    #if($request.sort == "title")
      #set($sortField1 = 'XWiki.GroupClass.title.untokenized')
      #set($sortField2 = 'date')
    #end
    #if($request.sort == "policy")
      #set($sortField1 = 'XWiki.GroupClass.policy.untokenized')
      #set($sortField2 = 'XWiki.GroupClass.title.untokenized')
    #end
    #if($request.sort == "updated")
      #set($sortField1 = 'date')
      #set($sortField2 = 'XWiki.GroupClass.title.untokenized')
    #end
  #end
  #if($!request.dir == "DESC")
    #set($sortField1 = "-${sortField1}")
  #end
  #set($sortFields = "${sortField1},${sortField2}")
  #set($sortFields = $sortFields.split(","))
  ##
  ## Create query
  ##
  #set($q = $xwiki.arrayList)
  ##
  ## Terms
  #if("$!request.terms" != "")
    ## escape lucene special characters
    #set($terms = $request.terms.replaceAll('([\+\-\&amp;\|\!\(\)\{\}\[\]\^\"\~\*\?\:\\])', '\\$1'))
    #set($junk = $q.add("(${escapetool.Q}${terms}${escapetool.Q} OR ${terms}*)"))
  #end
  ## Education system
  #set($international = true)
  #if("$!request.system" != "" &amp;&amp; "$!request.system" != "AssetMetadata.InternationalEducation")
    #set($international = false)
    #set($junk = $q.add("XWiki.GroupClass.education_system:${request.system}"))
  #end
  ##
  ## Educational level
  #if("$!request.level" != "")
    #if($international == false)    
      #set($junk = $q.add("XWiki.GroupClass.educational_level:${request.level}"))
      #if("$!request.sublevel" != "")
        #set($junk = $q.add("XWiki.GroupClass.educational_level:${request.sublevel}"))
      #end
    #else
      #set($pivot = $xwiki.getDocument($request.level).getValue("pivot"))
      #set($pivotlvls = $xwiki.searchDocuments(", BaseObject AS obj, StringProperty AS prop WHERE obj.name=doc.fullName AND obj.className='CurrikiCode.EducationalLevelClass' AND prop.id.id=obj.id AND prop.name='pivot' AND prop.value='${pivot}' AND NOT doc.fullName='${request.level}'"))      
      #set($lvlquery = "")
      #foreach($pivotlvl in $pivotlvls)
        #set($lvlquery = "${lvlquery} XWiki.GroupClass.educational_level:${pivotlvl}")
        #if($velocityCount &lt; $pivotlvls.size())
          #set($lvlquery = "${lvlquery} OR")
        #end        
      #end
      #set($junk = $q.add("(${lvlquery})"))
    #end
  #end
  ##
  ## Subject
  #if("$!request.subject" != "")
    #set($junk = $q.add("XWiki.GroupClass.disciplines:${request.subject}"))
  #end
  #if("$!request.subsubject" != "")
    #set($junk = $q.add("XWiki.GroupClass.disciplines:${request.subsubject}"))
  #end  
  ##
  ## Language
  #if("$!request.language" != "")
    #set($junk = $q.add("XWiki.GroupClass.language:${request.language}"))
  #end
  ##
  ## Open/Closed policy
  #if("$!request.policy" != "")
    #set($junk = $q.add("XWiki.GroupClass.policy:${request.policy}"))
  #end
  ##
  ##
  ##
  ## Put together query conditions
  #set($conditions = "")
  #foreach($condition in $q)
    #set($conditions = "$conditions AND $condition")
  #end
  ##
  ## General query information
  #set($wikinames = "xwiki")
  #set($languages = "default,en")
  ## Search Group_*.WebPreferences
  ## Has a XWiki.GroupClass object
  ##  -- display name - title
  ##  -- description - description
  ##  -- membership policy - policy == open|closed
  ##  -- educational level - educational_level
  ##  -- topics of interest - disciplines
  ##  -- language - language
  #*
  #set($topics = $xwiki.searchDocuments("where doc.space='FW_masterFramework' AND doc.parent=''"))
  #foreach($topic in $topics)
    #if($velocityCount == 1)
      #set($include = "(XWiki.CurrikiSpaceClass.topic:${topic}")
    #else
      #set($include = "$include OR XWiki.CurrikiSpaceClass.topic:${topic}")
    #end
  #end
  *#
  #set($include = "(XWiki.GroupClass.access_level:public OR XWiki.GroupClass.access_level:protected OR XWiki.GroupClass.access_level:private) AND name:WebPreferences")
  #set($exclude = "")
  #set($luceneQuery = "$include $conditions $exclude")
  #if("$!request.debug" != "")
    $luceneQuery
  #end
  ##
  ## Do query
  ##
  #set($searchResults = $lucene.getSearchResults($luceneQuery, $sortFields, $languages))
  #set($results = $searchResults.getResults($start, $limit))
  #set($resultCount = $searchResults.totalHitcount)
  #set($modifiedCount = $resultCount)
  #if($modifiedCount &gt; $maxResults)
  #set($modifiedCount = $maxResults)
  #end

  ##
  ## List out results
  ##
  #if("$!resultCount" == "")
    #set($resultCount = 0)
  #end
  {
  'rows':[
  #set($first = true)
  #foreach($result in $results)
    ##
    ## Get each result
    #set($d = $xwiki.getDocument("${result.web}.${result.name}"))
    ##
    ## Get Title
    #set($title = $!d.getObject("XWiki.GroupClass").getProperty("title").getValue())
    #if(!$title || $title.length() == 0)
      #set($title = $msg.get("caption.untitled"))
    #end
    #set($title = $title.replace("'", "&amp;#39;"))
    ##
    ## Get policy
    #set($policy = $!d.getObject("XWiki.GroupClass").getProperty("policy").getValue())
    ##
    ## Get URL
    #set($url = "")
    #set($space = $d.fullName.replace(".WebPreferences", ".WebHome"))
    #set($url = $xwiki.getURL($space))
    ##
    ## Get Description
    #set($desc = "")
    #set($desc = $!d.getObject("XWiki.GroupClass").getProperty("description").getValue())
    #set($desc = $desc.replace("'", "&amp;#39;"))
    #set($desc = $desc.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
    ##
    ##
    #if($first)
      #set($first = false)
    #else
      ,
    #end
    {
     'page':'${space}'
    ,'title':'${title}'
    ,'url':'${url}'
    ,'policy':'${policy}'
    ,'description':'${desc}'
    ,'updated':'${datetool.format($d.date)}'
    }
  #end
]
,'resultCount':'${modifiedCount}'
,'totalResults':'${resultCount}'
}
#end
{/pre}</content>
</xwikidoc>
