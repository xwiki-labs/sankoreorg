<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>Search</web>
  <name>External</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Search.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1346457600000</creationDate>
  <date>1346457600000</date>
  <contentUpdateDate>1346457600000</contentUpdateDate>
  <version>1.1</version>
  <title>External</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/1.0</syntaxId>
  <hidden>false</hidden>
  <content>#if($request.xpage != "plain")

#set($subjects = $xwiki.searchDocuments(", BaseObject AS obj WHERE doc.fullName=obj.name AND obj.className='XWiki.FrameworkItemClass' AND doc.parent=''"))
#set($levels = $xwiki.searchDocuments(", BaseObject AS obj WHERE doc.fullName=obj.name AND obj.className='CurrikiCode.EducationalLevelClass' AND doc.parent=''"))
#set($icts = $xwiki.searchDocuments(", BaseObject AS obj WHERE doc.fullName=obj.name AND obj.className='CurrikiCode.InstructionalComponentClass' AND doc.parent=''"))

URL = /xwiki/bin/view/Search/Resources?xpage=plain&amp;

1 *REQUEST PARAMS:*

*start:* // index of the first returned result

*limit:* // number of results returned

*sort:* // sort column

*dir:* // direction of sort

*terms:* // search terms

*language:* // en || fr

*subject:*

{pre}
[
#foreach($subject in $subjects)
#if($velocityCount &gt; 1),#end $subject 
#end
]
{/pre}

*subsubject:*

{

#foreach($subject in $subjects)
$subject:

{pre}
[
#foreach($subsubject in $xwiki.searchDocuments(", BaseObject AS obj WHERE doc.fullName = obj.name AND obj.className='XWiki.FrameworkItemClass' AND doc.parent='$subject'"))
#if($velocityCount &gt; 1),#end $subsubject
#end
]
{/pre}

#end

}

*level:*

{pre}
[
#foreach($level in $levels)
#if($velocityCount &gt; 1),#end $level
#end
]
{/pre}

*sublevel:*

{

#foreach($level in $levels)
$level:

{pre}
[
#foreach($sublevel in $xwiki.searchDocuments(", BaseObject AS obj WHERE doc.fullName = obj.name AND obj.className='CurrikiCode.EducationalLevelClass' AND doc.parent='$level'"))
#if($velocityCount &gt; 1),#end $sublevel
#end
]
{/pre}

#end

}

*ict:*

{pre}
[
#foreach($ict in $icts)
#if($velocityCount &gt; 1),#end $ict
#end
]
{/pre}

*subict*

{

#foreach($ict in $icts)
$ict:

{pre}
[
#foreach($subict in $xwiki.searchDocuments(", BaseObject AS obj WHERE doc.fullName = obj.name AND obj.className='CurrikiCode.InstructionalComponentClass' AND doc.parent='$ict'"))
#if($velocityCount &gt; 1),#end $subict
#end
]
{/pre}

#end

}

*special:*

{pre}
[ &lt;br/&gt;
 "contributions" // only current user contributions &lt;br/&gt;
,"collections"   // only current user collections &lt;br/&gt;
,"sankore"       // only sankore resources, ubw and ubz files &lt;br/&gt;
,"reviewed"      // only resources reviewed by admins &lt;br/&gt;
,"notreviewed"   // only resources not reviewed by current user &lt;br/&gt;
]
{/pre}


*review:*

{pre}
[ &lt;br/&gt;
"highest_rated" // highest rated by admins &lt;br/&gt;
,"members.highest_rated" // highest rated by members &lt;br/&gt;
]
{/pre}

1 RESPONSE FORMAT

*Content-Type:* text/html;charset=UTF-8

1 JSON

{pre}
{&lt;br/&gt;
'rows':[&lt;br/&gt;
{ 'page':'resource id' &lt;br/&gt;
  ,'title':'resource  title' &lt;br/&gt;
  ,'assetType':'resource type' one of [Archive|Attachment|Audio|Document|Image|Interactive] &lt;br/&gt;
  ,'category':'resource category' // one of [text|image|audio|video|interactive|archive|document|external|collection|unknown] &lt;br/&gt;
  ,'subcategory':'file type/extension in case of attachment resources or "collection" for category of "collection"' &lt;br/&gt;
  ,'ict':[] &lt;br/&gt;
  ,'contributor':'contributor id' &lt;br/&gt;
  ,'contributorName':'contributor fullname' &lt;br/&gt;
  ,'review':'review note' &lt;br/&gt;
  ,'rating':'member rating 1-5' &lt;br/&gt;
  ,'ratingCount':'number of member ratings' &lt;br/&gt;
  ,'description':'description' &lt;br/&gt;
  ,'subjects':[] &lt;br/&gt;
  ,'levels': [] &lt;br/&gt;
  ,'parents':[ &lt;br/&gt;
{ &lt;br/&gt;
'page':'parent resource id' &lt;br/&gt;
,'title':'parent resource title' &lt;br/&gt;
,'assetType':'parent resource type' one of [CollectionComposite] &lt;br/&gt;
,'category':'parent resource category' one of [collection] &lt;br/&gt;
,'subcategory':'' one of [collection] &lt;br/&gt;
,'ict':[] &lt;br/&gt;
,'contributor':'parent resource contributor id' &lt;br/&gt;
,'contributorName':'parent resource contributor fullname' &lt;br/&gt;
,'review':'parent resource review' &lt;br/&gt;
,'rating':'member rating 1-5' &lt;br/&gt;
,'ratingCount':'number of member ratings' &lt;br/&gt;
,'description':'parent resource description' &lt;br/&gt;
,'subjects':[] &lt;br/&gt;
,'levels':[] &lt;br/&gt;
,'updated':'updated date' &lt;br/&gt;
,'creation':'creation date' &lt;br/&gt;
,'author':'right holder id' &lt;br/&gt;
,'authorName': 'rights holder fullname' &lt;br/&gt;
} &lt;br/&gt;
  ] &lt;br/&gt;
  ,'updated':'updated date' &lt;br/&gt;
  ,'creation':'creation date' &lt;br/&gt;
  ,'author':'right holder id' &lt;br/&gt;
  ,'authorName': 'rights holder fullname' &lt;br/&gt;
  } &lt;br/&gt;
] &lt;br/&gt;
,'resultCount':'number of returned results' &lt;br/&gt;
,'totalResults':'number of total results' &lt;br/&gt;
} &lt;br/&gt;
{/pre}

#end

{pre}
## start=0&amp;limit=25&amp;sort=title&amp;dir=ASC
## terms=&amp;subject=&amp;filetype=&amp;level=&amp;language=&amp;ict=&amp;special=
## return  root: results, totalProperty: totalCount
##   pagename, title, ict, contributor, contributorName, review
#**
  * Get ICT information about a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceICT $resource)
  #set($ret_ict = "")
  #set($ict = $!resource.getValue('instructional_component'))
  #set($isFirst = true)
  #foreach($item in $ict)
    #if($isFirst)
      #set($isFirst = false)
    #else
      #set($ret_ict = "$ret_ict, ")
    #end
    #set($ret_ict = "${ret_ict}${escapetool.Q}${item}${escapetool.Q}")
  #end
  #set($ret_ict = "[ $ret_ict ]")
#end
#**
  * Get the title for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceTitle $resource)
  #asset_findtitle($resource)
  #set($ret_title = $currikiTitle)
  #if(!$ret_title || $ret_title.length() == 0)
    #set($ret_title = $msg.get("caption.untitled"))
  #end
#end
#**
  * Get the review for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceReview $resource)
  #set($ret_review = "")
  #set($ret_review = $!resource.getObject("CRS.CurrikiReviewStatusClass").getProperty("status").getValue())
  #set($ret_rating = $!resource.getObject("CurrikiCode.AssetClass").getProperty("rating").getValue())
  #set($ret_ratingCount = $!resource.getObject("CurrikiCode.AssetClass").getProperty("rating_count").getValue())
#end
#**
  * Get the asset type for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceAssetType $resource)
  #set($ret_assetType = "")
  #set($meta = $resource.getMetadata())
  #foreach($prop in $meta)
    #if($prop.getName() == 'assetType')
      #set($ret_assetType = $prop.getValue())
    #end
  #end
#end
#**
  * Get the category for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceCategory $resource)
  #set($ret_category = $!resource.getCategory())
  #set($ret_subcategory = $!resource.getCategorySubtype())
  #if("$!ret_subcategory" == "")
    #set($ret_subcategory = "unknown")
  #end
#end
#**
  * Get the description for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceDescription $resource)
  #set($ret_desc = "")
  #set($ret_desc = $!resource.getObject("CurrikiCode.AssetClass").getProperty("description").getValue())
  #set($ret_desc = $ret_desc.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
#end
#**
  * Get the framework items for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceFWItems $resource)
  #set($ret_FW = "")
  #set($subj = $!resource.getValue('fw_items'))
  #set($isFirst = true)
  #foreach($item in $subj)
    #if($isFirst)
      #set($isFirst = false)
    #else
      #set($ret_FW = "$ret_FW, ")
    #end
    #set($ret_FW = "${ret_FW}${escapetool.Q}${item}${escapetool.Q}")
  #end
  #set($ret_FW = "[ $ret_FW ]")
#end
#**
  * Get the educational levels for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceEL $resource)
  #set($ret_lvl = "")
  #set($lvl = $!resource.getValue('educational_level'))
  #set($isFirst = true)
  #foreach($item in $lvl)
    #if($isFirst)
      #set($isFirst = false)
    #else
      #set($ret_lvl = "$ret_lvl, ")
    #end
    #set($ret_lvl = "${ret_lvl}${escapetool.Q}${item}${escapetool.Q}")
  #end
  #set($ret_lvl = "[ $ret_lvl ]")
#end
#**
  * Get the contributor name for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceContributorName $resource)
  #set($ret_cname = "")
  #set($ret_cname = $xwiki.getUserName($resource.creator, false))
  #set($ret_cname = $ret_cname.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
#end
#**
  * Get the parent resources for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceParents $resource)
  #set($ret_parents = "")
  #set($isComposite = $!resource.isFolder())
  #if(!$isComposite)
    #set($sql = ", BaseObject as composite, BaseObject as subasset, BaseObject as asset, StringProperty as cprops, StringProperty as sprops where doc.name != 'Favorites' and doc.name != 'WebHome' and composite.name=doc.fullName and composite.className='CurrikiCode.CompositeAssetClass' and composite.id=cprops.id.id and cprops.id.name='type' and (cprops.value='collection' or cprops.value='folder') and subasset.name=doc.fullName and subasset.id=sprops.id.id and subasset.className='CurrikiCode.SubAssetClass' and sprops.id.name='assetpage' and sprops.value='${resource.fullName}' order by doc.name")
    #set($parentList = $xwiki.searchDocuments($sql))
    #if($parentList.size() &gt; 0)
      #set($isFirstParent = true)
      #foreach($parentPage in $parentList)
        #if($xwiki.hasAccessLevel("view", $parentPage))
          #set($parentAsset = $xwiki.getDocument($parentPage))
          #searchResourceInfo($parentAsset false)
          #set($date = $datetool.format($parentAsset.date))
          #set($pJSON = "{ ${escapetool.Q}page${escapetool.Q}:${escapetool.Q}${escapetool.javascript($escapetool.url($parentAsset.fullName))}${escapetool.Q}
          ,${escapetool.Q}title${escapetool.Q}:${escapetool.Q}${escapetool.javascript($escapetool.xml($ret_title))}${escapetool.Q}
          ,${escapetool.Q}assetType${escapetool.Q}:${escapetool.Q}${escapetool.javascript($ret_assetType)}${escapetool.Q}
          ,${escapetool.Q}category${escapetool.Q}:${escapetool.Q}${escapetool.javascript($ret_category)}${escapetool.Q}
          ,${escapetool.Q}subcategory${escapetool.Q}:${escapetool.Q}${escapetool.javascript($ret_subcategory)}${escapetool.Q}
          ,${escapetool.Q}ict${escapetool.Q}:$ret_ict
          ,${escapetool.Q}contributor${escapetool.Q}:${escapetool.Q}${escapetool.javascript($escapetool.url($parentAsset.creator))}${escapetool.Q}
          ,${escapetool.Q}contributorName${escapetool.Q}:${escapetool.Q}${escapetool.javascript($escapetool.xml($ret_cname))}${escapetool.Q}
          ,${escapetool.Q}review${escapetool.Q}:${escapetool.Q}$!ret_review${escapetool.Q}
          ,${escapetool.Q}description${escapetool.Q}:${escapetool.Q}${escapetool.javascript($escapetool.xml($ret_desc))}${escapetool.Q}
          ,${escapetool.Q}subjects${escapetool.Q}:$ret_FW
          ,${escapetool.Q}levels${escapetool.Q}:$ret_lvl
          ,${escapetool.Q}updated${escapetool.Q}:${escapetool.Q}$date${escapetool.Q}
          ,${escapetool.Q}creation${escapetool.Q}:${escapetool.Q}$parentAsset.creationDate${escapetool.Q}
          ,${escapetool.Q}author${escapetool.Q}:${escapetool.Q}${escapetool.javascript($escapetool.xml($ret_rightsHolder))}${escapetool.Q}
          ,${escapetool.Q}authorName${escapetool.Q}: ${escapetool.Q}${escapetool.javascript($escapetool.xml($ret_rightsHolderName))}${escapetool.Q} 
          }")
          #if($isFirstParent)
            #set($isFirstParent = false)
          #else
            #set($ret_parents = "$ret_parents, ")
          #end
          #set($ret_parents = "${ret_parents}${pJSON}")
        #end
      #end
    #end
  #end
  #set($ret_parents = "[ $ret_parents ]")
#end

#macro(searchResourceRightsHolder $resource)
  #set($ret_rightsHolder = $resource.getObject("CurrikiCode.AssetLicenseClass").getProperty("rightsHolder").value)
  #set($ret_rightsHolderName = $ret_rightsHolder)
  #set($ret_rightsHolderName = $ret_rightsHolderName.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
#end

#macro(searchResourceLink $resource)
  #set($ret_link = $resource.getObject("CurrikiCode.ExternalAssetClass").getProperty("link").value)
  ##set($ret_rightsHolderName = $ret_rightsHolder)
  ##set($ret_rightsHolderName = $ret_rightsHolderName.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
#end

#**
  * Main macro to get the resource information
  *
  * resource   Curriki Asset Document
  * getParents true if need to get parent information
  *#
#macro(searchResourceInfo $resource $getParents)
##
#if($getParents)
  #searchResourceParents($resource)
#end
#searchResourceTitle($resource)
#searchResourceICT($resource)
#searchResourceReview($resource)
#searchResourceAssetType($resource)
#searchResourceCategory($resource)
#searchResourceDescription($resource)
#searchResourceFWItems($resource)
#searchResourceEL($resource)
#searchResourceContributorName($resource)
#searchResourceRightsHolder($resource)
#searchResourceLink($resource)
#set($date = $datetool.format($resource.date))
#if($resource.getObject("CurrikiCode.AttachmentAssetClass"))
 #foreach($attach in $resource.getAttachmentList())
  #set($furl = $resource.getAttachmentURL($attach.filename))
  #set($ret_file = "${request.scheme}://${request.serverName}${furl}")
 #end
#else
  #set($ret_file = "")
#end
#if($resource.getObject("CurrikiCode.ImageAssetClass"))
  #set($ok = $resource.use("CurrikiCode.ImageAssetClass"))
  #set($ret_width = $resource.display("width"))
  #set($ret_height = $resource.display("height"))
#else
  #set($ret_width = "")
  #set($ret_height = "")
#end
#end
##
##
#set($lucene = $xwiki.getPlugin("lucene"))
#if(!$lucene)
  { "resultCount": 0, "rows":[]}
#else
  ##
  ## Set start and limit for result list
  ##
  #set($Integer = 0)
  #set($maxResults = $Integer.parseInt($msg.get('search.results.max')))
  #set($start = 0)
  #if("$!request.start" != "")
    #set($start = $Integer.parseInt($request.start))
  #end
  #set($start = 1 + $start)
  #set($start = "$start")
  #set($limit = "25")
  #if("$!request.limit" != "")
    #set($limit = $request.limit)
  #end
  ##
  ## Set sort fields
  ##
  ###set($sortFields = ['CRS.CurrikiReviewStatusClass.status', 'CurrikiCode.AssetClass.rating', 'CurrikiCode.AssetClass.rating_count'])
  #set($sortField1 = 'CRS.CurrikiReviewStatusClass.status')
  #set($sortField2 = 'CurrikiCode.AssetClass.rating')
  #set($sortField3 = 'CurrikiCode.AssetClass.rating_count')
  #set($sortFields = "-${sortField1},-${sortField2},-${sortField3}")
  #set($sortFields = $sortFields.split(","))
  ##
  ## Create query
  ##
  #set($q = $xwiki.arrayList)
  ##
  ## Terms
  #if("$!request.terms" != "")
    ## escape lucene special characters
    #set($terms = $request.terms.replaceAll('([\+\-\&amp;\|\!\(\)\{\}\[\]\^\"\~\*\?\:\\])', '\\$1'))
    #set($junk = $q.add("(${escapetool.Q}${terms}${escapetool.Q} OR ${terms}*)"))
  #end
  ##
  ## Education system
  #set($international = true)
  #if("$!request.system" != "" &amp;&amp; "$!request.system" != "AssetMetadata.InternationalEducation")
    #set($international = false)
    #set($junk = $q.add("CurrikiCode.AssetClass.education_system:${request.system}"))
  #end
  ##
  ## Educational level
  #if("$!request.level" != "")
    #if($international == false)    
      #set($junk = $q.add("CurrikiCode.AssetClass.educational_level:${request.level}"))
      #if("$!request.sublevel" != "")
        #set($junk = $q.add("CurrikiCode.AssetClass.educational_level:${request.sublevel}"))
      #end
    #else
      #set($pivot = $xwiki.getDocument($request.level).getValue("pivot"))
      #set($pivotlvls = $xwiki.searchDocuments(", BaseObject AS obj, StringProperty AS prop WHERE obj.name=doc.fullName AND obj.className='CurrikiCode.EducationalLevelClass' AND prop.id.id=obj.id AND prop.name='pivot' AND prop.value='${pivot}' AND NOT doc.fullName='${request.level}'"))      
      #set($lvlquery = "")
      #foreach($pivotlvl in $pivotlvls)
        #set($lvlquery = "${lvlquery} CurrikiCode.AssetClass.educational_level:${pivotlvl}")
        #if($velocityCount &lt; $pivotlvls.size())
          #set($lvlquery = "${lvlquery} OR")
        #end        
      #end
      #set($junk = $q.add("(${lvlquery})"))
    #end
  #end
  ##
  ## Subject
  #if("$!request.subject" != "")    
      #set($junk = $q.add("CurrikiCode.AssetClass.fw_items:${request.subject}"))
    #if("$!request.subsubject" != "")
      #set($junk = $q.add("CurrikiCode.AssetClass.fw_items:${request.subsubject}"))
    #end
  #end
  ##
  ## Instructional component
  #if("$!request.ict" != "")
    #set($junk = $q.add("CurrikiCode.AssetClass.instructional_component:${request.ict}"))
    #if("$!request.subict" != "")
      #set($junk = $q.add("CurrikiCode.AssetClass.instructional_component:${request.subict}"))
    #end
  #end
  ##
  ## Language
  #if("$!request.language" != "")
    #set($junk = $q.add("CurrikiCode.AssetClass.language:${request.language}"))
  #end  
  ##
  ## FileType
  #if("$!request.filetype" != "")
    #set($junk = $q.add("CurrikiCode.AssetClass.category:${request.filetype}"))
  #end    
  ##
  ## Category
  ##if("$!request.category" != "")
    ##set($junk = $q.add("CurrikiCode.AssetClass.category:${request.category}"))
  ##else
    ##set($junk = $q.add(" CurrikiCode.AssetClass.category:external"))
  ##end
  ##
  ## Other
  #if("$!request.other" != "")
    #set($junk = $q.add("(${request.other})"))
  #end
  ##
  ## Review
  #if("$!request.review" != "")
    #if($request.review == "partners")
      #set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:200"))
    #end
    #if($request.review == "curriki")
      #set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:(300 OR 400 OR 500 OR 600 OR 700 OR 800)"))
    #end
    #if($request.review == "members")
      #set($junk = $q.add("CurrikiCode.AssetClass.rating:(1 OR 2 OR 3 OR 4 OR 5)"))
    #end
    #if($request.review == "not_reviewed")
      #set($junk = $q.add("NOT (CRS.CurrikiReviewStatusClass.status:(200 OR 300 OR 400 OR 500 OR 600 OR 700 OR 800) OR CurrikiCode.AssetClass.rating:(1 OR 2 OR 3 OR 4 OR 5))"))
    #end
  #end
  ##
  ## Special
  ## contributions, collections, resources, updated
  #if("$!request.special" != "")
    #if($request.special == "contributions")
      #set($junk = $q.add("creator:${context.user}")) ## This is the full USERNAME, not realname
    #end
    #if($request.special == "collections")
      #set($junk = $q.add("CurrikiCode.CompositeAssetClass.type:collection"))
    #end
    #if($request.special == "sankore")
      #set($junk = $q.add("CurrikiCode.AttachmentAssetClass.file_type:(ubw OR ubz)"))
    #end
    #if($request.special == "updated")
      #set($dt = $xwiki.curriki.formatDate($xwiki.curriki.getDateMinusDays($msg.get('search.resource.special.selector.updated.days')), "yyyyMMdd"))
      #set($upq = "date:[$dt TO 29991231]")
      #set($junk = $q.add($upq))
    #end
    #if($request.special == "groups")
      #set($junk = $q.add("web:Group_Coll_*"))
    #end
  #end
  ##
  ## Put together query conditions
  #set($conditions = "")
  #foreach($condition in $q)
    #if($velocityCount &gt; 1)
    #set($conditions = "$conditions AND $condition")
    #else
    #set($conditions = "$condition")
    #end
  #end ##}
  ##
  ## General query information
  #set($wikinames = "xwiki")
  #set($languages = "default,en,fr")
  #set($include = "CurrikiCode.AssetClass.hidden_from_search:0 ")
  ## AND NOT CurrikiCode.TextAssetClass.syntax:cboe 
  #set($exclude = " AND CurrikiCode.AssetClass.category:external AND NOT web:AssetTemp AND NOT web:Coll_Templates AND NOT name:WebHome AND NOT name:WebPreferences AND NOT name:MyCollections AND NOT name:SpaceIndex")
  #if("$!conditions" != "")
    #set($include = "$!include AND ")
  #end
  #set($luceneQuery = "$!include $!conditions $!exclude")
  ##
  ## Do query
  ##
  #set($searchResults = $lucene.getSearchResults($luceneQuery, $sortFields, $languages))
  #set($results = $searchResults.getResults($start, $limit))
  #set($resultCount = $searchResults.totalHitcount)
  ##
  ## Debug
  ##
  #if($request.debug)
    Query: $luceneQuery
    SortFields: #foreach($field in $sortFields) $field #end
    Languages: $languages
    Results: $searchResults
  #end
  #set($modifiedCount = 0)
  #if($resultCount)
     #set($modifiedCount = $resultCount)
  #end
  #if($modifiedCount &gt; $maxResults)
    #set($modifiedCount = $maxResults)
  #end
  ##
  ## List out results
  ##
  #if("$!resultCount" == "")
    #set($resultCount = 0)
  #end
  #if($request.xpage == "plain")
    #set($ok = $response.setContentType("application/json"))
    #set($ok = $response.setHeader("Access-Control-Allow-Origin", "*"))
    {
      "rows":[
        #set($first = true)
        #foreach($result in $results)
          ##
          ## Get each result
          #set($d = $xwiki.curriki.fetchAsset("${result.space}.${result.name}"))
          #searchResourceInfo($d true)
          ##
          ##
          #if($first)
            #set($first = false)
          #else
            ,
          #end
          { "page":"$escapetool.javascript($escapetool.url($d.fullName))" 
           ,"title":"$escapetool.javascript($escapetool.xml($ret_title))" 
           ,"assetType":"$escapetool.javascript($ret_assetType)" 
           ,"category":"$escapetool.javascript($ret_category)" 
           ,"subcategory":"$escapetool.javascript($ret_subcategory)"
           ,"ict":$ret_ict
           ,"contributor":"$escapetool.javascript($escapetool.url($d.creator))" 
           ,"contributorName":"$escapetool.javascript($escapetool.xml($ret_cname))" 
           ,"review":"$!ret_review"
           ,"rating":"$!ret_rating"
           ,"ratingCount":"$!ret_ratingCount"
           ,"description":"$escapetool.javascript($escapetool.xml($ret_desc))" 
           ,"subjects":$ret_FW
           ,"levels": $ret_lvl
           ,"parents": $ret_parents
           ,"updated":"$escapetool.javascript($date)" 
           ,"creation":"$escapetool.javascript($d.creationDate)"
           ,"author":"$escapetool.javascript($escapetool.xml($ret_rightsHolder))"
           ,"authorName": "$escapetool.javascript($escapetool.xml($ret_rightsHolderName))"
           ##,"link": "$escapetool.javascript($escapetool.url($ret_link))"
           ,'link': "$ret_link"
            #if($ret_width!="")
              ,"width": "$escapetool.javascript($ret_width)"
              ,"height": "$escapetool.javascript($ret_height)"
            #end
           }
         #end ## end
       ]
      ,"resultCount":"${modifiedCount}"
      ,"totalResults":"${resultCount}"
    }
  #end
#end 
{/pre}</content>
</xwikidoc>
