<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>SankoreCode</web>
  <name>DownloadAttachment</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>SankoreCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1385559825000</creationDate>
  <date>1419607336000</date>
  <contentUpdateDate>1419607336000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <object>
    <name>SankoreCode.DownloadAttachment</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>9322fdbd-d9bf-46b1-870c-145406ac5096</guid>
    <property>
      <level>programming</level>
    </property>
  </object>
  <content>{{groovy}}
import java.io.ByteArrayOutputStream
import com.xpn.xwiki.api.Context
import com.xpn.xwiki.XWikiContext
import com.xpn.xwiki.doc.XWikiDocument
import com.xpn.xwiki.doc.XWikiAttachment
import org.apache.commons.io.IOUtils

import java.util.regex.Pattern
import java.util.zip.ZipEntry
import java.util.zip.ZipInputStream

class Downloader
{
    private XWikiContext context;

    public Downloader(Context context)
    {
        this.context = context.getContext();
    }

    public void downloadAttachment(String document, String extension)
    {
        XWikiDocument xwikiDocument = this.context.getWiki().getDocument(document, this.context);
        List&lt;XWikiAttachment&gt; attachmentList = xwikiDocument.getAttachmentList();
        if(attachmentList.size() &gt; 0) {
          XWikiAttachment xWikiAttachment = attachmentList.get(0);
          if(extension &amp;&amp; (extension == "pdf" || extension == "ubz")) {
            //it's a zip just download the file with extension fileExtension
            def contentType = ["pdf": "application/pdf", "ubz": "application/octet-stream"];
            flushZipContent(xWikiAttachment.getContentInputStream(this.context), xwikiDocument.getTitle(), extension, contentType.get(extension));
          } else {
            flushOutput(xWikiAttachment.getContentInputStream(this.context), xwikiDocument.getTitle(), xWikiAttachment.getFilename().substring(xWikiAttachment.getFilename().lastIndexOf('.')), xWikiAttachment.getMimeType(this.context));
          }
        }
      }

    private void flushZipContent(InputStream attachmentInputStream, String fileName, String extension, String contentType) {
        ZipInputStream zipInputStream = new ZipInputStream(attachmentInputStream);
        ZipEntry ze = null
        while((ze = zipInputStream.nextEntry) != null) {
            if(ze.name.endsWith(".$extension")) {
                flushOutput(zipInputStream, fileName, extension, contentType);
                break;
            }
        }
    }

    private void flushOutput(InputStream inputStream, String fileName, String extension, String contentType)
    {
        String fileNameEscaped = Pattern.compile("\\p{Punct}").matcher(fileName).replaceAll("");
        //fileName = URLEncoder.encode(fileNameEscaped, "UTF-8");
        //fileName = this.context.getWiki().clearName(fileNameEscaped, true, false, this.context);
        fileNameEscaped = fileNameEscaped.replaceAll("[_':,;\\\\/]", " ");
        fileNameEscaped = fileNameEscaped.replaceAll("\\s+", "_");
        fileNameEscaped = fileNameEscaped.replaceAll("[\\(\\)]", " ");
        fileName  = fileNameEscaped.replaceAll("[\\.]", "");
        if(extension.startsWith(".")) {
            extension = extension.substring(1);
        }
        def response = context.getResponse();
        response.setContentType(contentType);
        response.setHeader("Content-Disposition", "attachment;filename=$fileName.$extension");
        IOUtils.copy(inputStream, context.getResponse().getOutputStream());
    }
}

def document = request.get('document')
def extension = request.get('fileExtension')
if (xwiki.hasAccessLevel('view', xcontext.user, "$document")) {
  def downloader = new Downloader(xcontext);
  downloader.downloadAttachment(document, extension);
}
{{/groovy}}</content>
</xwikidoc>
