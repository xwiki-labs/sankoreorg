<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>CreateResources</web>
  <name>SimpleHTMLResource</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>CreateResources.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1322070219000</creationDate>
  <date>1322070219000</date>
  <contentUpdateDate>1322070219000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>CreateResources.SimpleHTMLResource</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>8b53dcda-01ef-4d87-977e-f205b28ca3c2</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>function checkSimpleResourceForm() {
  var missed_fields_str = '';
  if (isFieldEmpty('CurrikiCode.AssetClass_0_title')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.title'));
  }
  if (isFieldEmpty('CurrikiCode.AssetClass_0_description')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.description'));
  }
  if(isFieldEmpty('CurrikiCode.AssetClass_0_fw_items')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.subject'));
  }
  if(isFieldEmpty('CurrikiCode.AssetClass_0_educational_level')) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.level'));
  }
  if ($('CurrikiCode.AssetClass_0_instructional_component').value.length &lt;= 1) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.ict'));
  }
  if (isFieldEmpty('content')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.content'));
  }
  if (isFieldEmpty('CurrikiCode.AssetLicenseClass_0_rightsHolder')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.rights'));
  }

  var error_msg = "";
  if(missed_fields_str != '') {
    error_msg = _("form.scratch.required.fields.dialog") + missed_fields_str;
  } else {
    if(getFieldContent('CurrikiCode.AssetClass_0_title').length &gt; 250) {
      error_msg = _('form.scratch.title.more.250');
    }
  }

  if (error_msg != '') { // since theres error messages, validation failed... bail out.
    alert(error_msg);
    setSuccessMessage('');     //not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
    return false;
  } else { // SUCCESS!
    //setTextAssetToHtmlText(getWysiwygFieldContent('slp_text'));
    setSuccessMessage(_('form.done.created.resource'));
    return true;
  }
}
//
function getFieldContent(field_id) {
  var field   = $(field_id);
  var content = (content == null) ? '' : field.value;
  if ((content.length &lt; 1) || (content.trim() == '')) {
    return "";
  }
  return content;
}
//
function isFieldEmpty(field_id) {
  var field = $(field_id);
  var content = (field == null) ? "" : field.value;
  if ((content.length &lt; 1) || (content.trim() == '')) {
    return true;
  }
  return false;
}
//
function isWysiwygFieldEmpty(field_id) {
  var wysiwyg = Wysiwyg.getInstance(field_id);
  var content = wysiwyg.getRichTextArea().contentWindow.document.body;
  // here the value is actually 1 for IE9, to be fixed
  var minNodes = browser.isIE ? 0 : 1;
  return (content.childNodes.length &lt; minNodes); 
}
//
function getWysiwygFieldContent(field_id) {
  var wysiwyg = Wysiwyg.getInstance(field_id);
  return wysiwyg.getRichTextArea().contentWindow.document.body.innerHTML;
}
//
function setTextAssetToHtmlText(html) {
  var field = $('CurrikiCode.TextAssetClass_0_text');
  if (field != null) {
    field.value = html;
  }
  else { alert('error in setTextAssetToHtmlText()'); }
}

// set value POSTed via form hidden field w/ id="successMessage" and
// default value="" (which if received on POST, indicates an unexpected
// error condition has occurred). A nonempty string-value indicates
// validation success, the contents are displayed in AssetDone as $successMessage.
function setSuccessMessage(str) {
  var input_field_successMessage_o = $('successMessage');
  if (input_field_successMessage_o != null) {
    input_field_successMessage_o.value = str;
  }
  else { alert('error in setSuccessMessage()'); }
}
//
function appendSeparatedErrorMessageStr(message_str, missed_field_err_str) {
  return(message_str + '\n\t\t' + missed_field_err_str);
}
function onSubmitSimpleResourceForm() {
  try { 
    if(document.forms.inline.onsubmit) document.forms.inline.onsubmit(); 
    if (checkSimpleResourceForm()) {
      document.forms.inline.action=_('form.done.url'); 
      document.forms.inline.submit();
    }
    return false;
  } catch(e) { 
    alert(_('form.scratch.submit.button') + 'button onclick error: ' + e + ' ...'); 
    return false;
  }
}
function onCancelSimpleResourceForm(cancel_url) {
  try { 
    window.location.href=cancel_url;
    return false;
  } catch(e) { 
    alert(_('form.scratch.cancel.button') + 'button onclick error: ' + e + ' ...'); 
    return false; 
  }
}</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity}}{{html wiki="true"}}
##
## ---------- PREAMBLE, CHECK AUTHORIZATION ----------
##
#if($context.user=="XWiki.XWikiGuest")
  #set($loginredir = $xwiki.getRequestURL())
  #set( $url = $xwiki.getURL("XWiki.XWikiLogin","login","xredirect=$escapetool.url($loginredir)") )
  $msg.get("createresources.needaccount", [$url])

#else
  ##
  ## ----- OK, WE HAVE AUTHORITY SETUP THE FORM POST/GET ETC  -----
  ##
  #includeMacros("CreateResources.StyledMacros")
  ##  parameters passed by other forms or itself
  #set($pageName = $request.getParameter("pageName"))
  #set($cameFrom = $request.getParameter("cameFrom"))
  #set($flow = $request.getParameter("flow"))
  #set($parentPage = $request.getParameter("parentPage"))
  #set($publishSpace = $request.getParameter("publishSpace"))
  #if("$!pageName" != "")
    ## pageName is name of previously created asset, get it and use it.
    #set($newAsset = $xwiki.curriki.fetchAsset($pageName))
  #else
    ## empty pageName means no asset... so create new one. This is "default" action
    #set($newAsset = $xwiki.curriki.createAsset($util.null))
    ## note-below: &lt;input type="hidden" name="pageName" value="$!newAsset.fullName" /&gt;
    ## so followup POSTs set pageName to newly created asset, i.e. condition below:
  #end
  #if("$!newAsset"=="")
    ## HANDLE THIS DIFFERENTLY
    #if("$!pageName" != "")&lt;p&gt;asset creation error:&lt;/p&gt;#else&lt;p&gt;asset lookup error:&lt;/p&gt;#end
    &lt;dl&gt;
      &lt;dt&gt;request.method&lt;/dt&gt;&lt;dd&gt;$!request.method&lt;/dd&gt;
      &lt;dt&gt;request.page&lt;/dt&gt;&lt;dd&gt;$!request.page&lt;/dd&gt;
      &lt;dt&gt;request.pageName&lt;/dt&gt;&lt;dd&gt;$!pageName&lt;/dd&gt;
      &lt;dt&gt;request.cameFrom&lt;/dt&gt;&lt;dd&gt;$!cameFrom&lt;/dd&gt;
      &lt;dt&gt;request.flow&lt;/dt&gt;&lt;dd&gt;$!flow&lt;/dd&gt;
      &lt;dt&gt;request.parentPage&lt;/dt&gt;&lt;dd&gt;$!parentPage&lt;/dd&gt;
      &lt;dt&gt;request.publishSpace&lt;/dt&gt;&lt;dd&gt;$!publishSpace&lt;/dd&gt;
    &lt;/dl&gt;
  #else
    #set($discard = $xwiki.jsx.use("CreateResources.SimpleHTMLResource", {'minify': false}))
    ## ----- $newAsset defined for entire branch below ----- 
    ## create or get newTextAsset -- used to display WYSIWYG editor
    #if(!$newAsset.getObject("CurrikiCode.TextAssetClass"))
      ## create TextAssetClass for use by WYSIWYG
      #set($newTextAsset = $newAsset.newObject("CurrikiCode.TextAssetClass"))
    #else
      ## fetch existing TextAssetClass for use by WYSIWYG
      #set($newTextAsset = $newAsset.getObject("CurrikiCode.TextAssetClass"))
    #end
    #set($noDialogs = $request.getParameter("noDialogs"))  ## ?noDialogs=1 turns off add-path dialogs, for testing, or to enable "edit-again"
    ##
    ## -------------------- THE MAIN DISPLAY --------------------
    ##
    &lt;div class="header"&gt;
    #curriki_formtitle($msg.get("form.html.scratch.title"))
    #verbatim_start
    $msg.get("form.html.scratch.title.description") &lt;a href="$msg.get('form.html.title.description.link1.url')" target="_blank"&gt;$msg.get("form.html.title.description.link1")&lt;/a&gt;&lt;span class="separator"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a href="$msg.get('form.html.title.description.link3.url')" target="_blank"&gt;$msg.get("form.html.title.description.link3")&lt;/a&gt;&lt;span class="separator"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;img src="$msg.get('form.html.title.description.link2.thumbnail')" align="middle"&gt;&lt;a href="$msg.get('form.html.title.description.link2.url')" target="_blank"&gt;$msg.get("form.html.title.description.link2")&lt;/a&gt;
    &lt;br /&gt;$msg.get("form.required.fields.instruction")
    #verbatim_end
    &lt;/div&gt;
    ##
    ## --------------------FORM ITSELF --------------------
    ##
    ## NB: default action goes back to this form, which shouldnt happen, because,
    ## after successful validation via call to checkSimpleResourceForm(), the button
    ## below sets document.forms.inline.action='$msg.get("form.done.url")'
    ##
    &lt;form action="" class="curriki-form" id="inline" method="post"&gt;
    ## 
    ## Xredirect foo 
    ##
    &lt;input type="hidden" name="xredirect" value="$escapetool.url($xwiki.getRequestURL())" /&gt;
    ##
    ## XWiki.AssetClass_0_category is a "fake" property named "category" in XWiki.AssetClass.
    ## This is forced here to value "text". This hidden field is passed to AssetDone 
    ## via POST and instantiated via .updateObjectFromRequest("XWiki.AssetClass")
    &lt;input type="hidden" name="CurrikiCode.TextAssetClass_0_text" id="CurrikiCode.TextAssetClass_0_text" value="$msg.get('form.done.wysiwyg.error.wikitext')" /&gt;
    &lt;input type="hidden" name="CurrikiCode.AssetClass_0_category" id="CurrikiCode.AssetClass_0_category" value="text" /&gt;
    ## successMessage is a hidden field that is set to a string in validation javascript
    ## after successful validation. If AssetDone gets a POST with the default value of "" set here
    ## it will ignore the post as it means it's not validated.
    &lt;input type="hidden" name="successMessage" id="successMessage" value="" /&gt;
    &lt;input type="hidden" name="page" value="$!request.page" /&gt;
    &lt;input type="hidden" name="pageName" value="$!newAsset.fullName" /&gt;
    &lt;input type="hidden" name="publishSpace" value="$!publishSpace" /&gt;
    &lt;input type="hidden" name="parentPage" value="$!parentPage" /&gt;
    ## when ?noDialogs=... argument set, pass it on to AssetDone
    #if("$!noDialogs"!="")
      &lt;input type="hidden" name="noDialogs" value="$noDialogs" /&gt;
    ## ?noDialogs... not set, pass parameters used for add-path dialogs
    #else                                   
      &lt;input type="hidden" name="flow" value="$!flow" /&gt;
      &lt;input type="hidden" name="createLessonURL" value="$msg.get('form.html.scratch.url')" /&gt;
      #verbatim_start
      &lt;input type="hidden" name="cameFrom" #if("$!cameFrom"=="") value="$msg.get('form.html.scratch.url')" #else value="$!cameFrom" #end /&gt;
      #verbatim_end
    #end
    #####################################################################
    #curriki_formpart_begin($msg.get("form.html.scratch.step1.header"))
    #curriki_forminstructions($msg.get("form.html.scratch.step1.instruction"))
    #curriki_formprompt($msg.get("form.html.scratch.title_title"), $msg.get("form.html.scratch.title_tooltip"), $msg.get("form.html.scratch.title_txt"), true, "medium")
    ##$newAsset.display("title","edit")
    &lt;input type="text" id="CurrikiCode.AssetClass_0_title" name="CurrikiCode.AssetClass_0_title" /&gt;
    #curriki_formprompt($msg.get("form.html.scratch.description_title"), $msg.get("form.html.scratch.description_tooltip"), $msg.get("form.html.scratch.description_txt"), true, "medium")
    $newAsset.display("description","edit")
    &lt;table class="subject-educational"&gt;
    &lt;tr&gt;
      &lt;th&gt;#curriki_formprompt($msg.get("sri.fw_items_title"), $msg.get("sri.fw_items_tooltip"), $msg.get("sri.fw_items_txt"), true, "")&lt;/th&gt;
      &lt;th&gt;#curriki_formprompt($msg.get("sri.educational_level_title"), $msg.get("sri.educational_level_tooltip"), $msg.get("sri.educational_level_txt"), true, "medium")&lt;/th&gt;
      &lt;th&gt;#curriki_formprompt($msg.get("sri.instructional_component_title"), $msg.get("sri.instructional_component_tooltip"), $msg.get("sri.instructional_component_txt"), true, "medium")&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$newAsset.display("fw_items","edit")&lt;/td&gt;
      &lt;td&gt;$newAsset.display("educational_level","edit")&lt;/td&gt;
      &lt;td&gt;$newAsset.display("instructional_component","edit")&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
    #curriki_formprompt($msg.get("sri.keywords_title"), $msg.get("sri.keywords_tooltip"), $msg.get("sri.keywords_txt"), false, "medium")
    $newAsset.display("keywords","edit")
    #curriki_formprompt($msg.get("sri.language_title"), $msg.get("sri.language_tooltip"), $msg.get("sri.language_txt"), false, "medium")
    $newAsset.set("language", $context.language)
    $newAsset.display("language","edit")
    #curriki_formpart_end()
    #####################################################################
    #curriki_formpart_begin($msg.get("form.html.scratch.step2.header"))
    #curriki_forminstructions($msg.get("form.html.scratch.step2.instruction"))
    #curriki_formprompt($msg.get("form.html.scratch.step2.content.title"), "", $msg.get("form.html.scratch.step2.content.instruction"), true, "medium")
    ##$newTextAsset.display("text", "edit")
    #verbatim_start
    #markup_editAssetProperty($newAsset 'content' 'xhtml/1.0')
    #verbatim_end
    &lt;textarea id="content" name="content" rows="10"&gt;&lt;/textarea&gt;
    #curriki_formpart_end()
    #####################################################################
    #curriki_formpart_begin($msg.get("form.scratch.step3.header"))
    #curriki_forminstructions($msg.get("form.scratch.step3.instruction"))
    #curriki_formprompt($msg.get("sri.hidden_from_search_title"), $msg.get("sri.hidden_from_search_tooltip"), $msg.get("sri.hidden_from_search_txt"), false, "medium")
    $newAsset.display("hidden_from_search","edit")
    ## special case where text is needed after display(), which appears as label-less toggle
    &lt;label&gt;$msg.get("sri.hidden_from_search_after")&lt;/label&gt;  
    #curriki_formprompt($msg.get("sri.right_holder_title"), $msg.get("sri.right_holder_tooltip"), $msg.get("sri.right_holder_txt"), true, "medium")
    $newAsset.display("rightsHolder","edit")
    #curriki_formprompt($msg.get("sri.rights_title"), $msg.get("sri.rights_tooltip"), $msg.get("sri.rights_txt"), false, "medium")
    $newAsset.display("rights","edit")
    ## #curriki_formprompt($msg.get("sri.license_type_title"), $msg.get("sri.license_type_tooltip"), $msg.get("sri.license_type_txt"), false, "medium")
    ## &lt;p&gt;&lt;label&gt;$msg.get("sri.license_type_heading")&lt;/label&gt;&lt;/p&gt;  ##special case where additional text is needed as prompt before display()
    ## $newAsset.display("licenseType","edit")
    #curriki_formpart_end()
    #####################################################################
    #curriki_formpart_begin($msg.get("form.scratch.step4.header"))
    &lt;p&gt;&lt;label&gt;$msg.get("form.scratch.step4.instruction")&lt;/label&gt;&lt;/p&gt;
    &lt;p class="links"&gt;
      &lt;button onclick="return onSubmitSimpleResourceForm();" &gt;$msg.get("form.scratch.submit.button")&lt;/button&gt;
    #if("$!cameFrom" != "")
      #set($cancelURL = $cameFrom)
    #else
      ## cameFrom not set means go to WebHome
      #set($cancelURL = $xwiki.getURL("Main.WebHome"))
    #end
    #verbatim_start
    &lt;button class="cancel" onclick="return onCancelSimpleResourceForm('$cancelURL');" &gt;$msg.get("form.scratch.cancel.button")&lt;/button&gt;
    #verbatim_end
    &lt;/p&gt;
    #curriki_formpart_end()
    #####################################################################
    ##&lt;div class="tooltips"&gt;$xwiki.addTooltipJS()&lt;/div&gt;
    &lt;/form&gt;
    ##For testing,etc, add parameter ?noWYSIWYG=1 to force WYSIWYG editors to not display, and use TEXTAREA instead
    #set($noWYSIWYG  = $request.getParameter("noWYSIWYG"))
    #if("$!noWYSIWYG" == "")
      #if("$!publishSpace"=="")
        #set($user = $context.user)
        #if($user.startsWith("XWiki."))
          #set($shortname = $user.substring(6))
        #else
          #set($shortname = $user)
        #end
        #set($wysi_publishSpace = "Coll_${shortname}")
      #else
        #set($wysi_publishSpace = $publishSpace)
      #end
    #end
  #end
#end
{{/html}}
{{/velocity}}</content>
</xwikidoc>
